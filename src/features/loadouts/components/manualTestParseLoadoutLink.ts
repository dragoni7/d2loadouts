import { decompressFromEncodedURIComponent } from 'lz-string';

// The parseLoadoutLink function
const parseLoadoutLink = (link: string) => {
  const url = new URL(link);
  const compressedData = url.searchParams.get('data');
  
  if (!compressedData) {
    throw new Error('Invalid loadout link');
  }

  const decompressedData = decompressFromEncodedURIComponent(compressedData);
  
  if (!decompressedData) {
    throw new Error('Failed to decompress loadout data');
  }

  return JSON.parse(decompressedData);
};

// Function to test parseLoadoutLink with a manually provided hash
function testWithManualHash(hash: string) {
  // Construct the full URL with the provided hash
  const fullUrl = `http://example.com/loadout?data=${hash}`;

  console.log('Testing with URL:', fullUrl);

  try {
    // Attempt to parse the loadout link
    const parsedLoadout = parseLoadoutLink(fullUrl);
    console.log('Successfully parsed loadout:');
    console.log(JSON.stringify(parsedLoadout, null, 2)); // Pretty print the result
  } catch (error) {
    console.error('Error parsing loadout link:', error);
  }
}

// REPLACE THIS WITH YOUR ACTUAL GENERATED HASH
const manuallyProvidedHash = 'https://localhost:5173/loadout?data=N4IgFgpgNgthAuBZA9gEwM4gFwG1QEt4IYAJAQ3TGwEYBOADgAYA2a+gVnoHYAaEABwgAnANYA5MnGwgQfQaIAiEdAGMh+fvHzIAdtNkDhIgJIrd+virJEA5siEBPbACYALN3rOuAZnbs++OgA8gDuOhCo2PBCAK4QfDqSENIAojCaDgAEKKiZAMrIKiIIBvhmeljg8PD86FgA9PUARjE6NvgQAHTh8PVmMDC69ajKWjoOzgD65UQ6vWW66PVMqM4Q1GTOZFzMAGYjm1zszk0QTdSu1Iz0rqgqu-SdAFb8NgYQ4UI2DgDCyOjwbCMSzIKBQCAqLRNcHkSjYAC01AAvjwCERSBQqFgrlwmEwdv5DKIJFJKgZ5CIlKp1JptBUZHIjKZzGTLNYIHZHC5aNRnNQuFdGN4AsEwhEorF4iBEqSQGkMtk0PlCsVAQFytIwNVag1mq12l0en1kAMhiMAfhxlMZh95uUluwyA8jvRmCpaM4VMwfGRtvRfK5vKh6PtnMH9s9Xu9Pt8-gCgSCwRCoTDMQjkaiQIRiLCsTi8YwCYziUkLETKco1BotCyGeXmfSDFZbPYnFhnDy+QLGEKRaFwpEsNE4glS5V5fAsjllUUSura1qanVGi02h1ughjaadMNRpaJtNdLM7Yt6o7nZw3R6vT6-QGgyHVuHUJG3nwPsJY-9AVhgSAzEmkL4NCEC5umKJojmabYoWBZFuWJLJKy5ZUlWtK1uSTIashzYcq23K8vygrClmooDhKI7SmOcrpJOiq5AUs5qlm2FVEuuqrgaG69P0gw7uaYwHjacz1AsOgOk63CXu6nret4vq4vez5ho+r7Rp+vzfgm-6guCQEgWBWCIhBWbooZlw+B6gbOCRFKIWWFKoTSNaNsWJisU27Kcm23hcD4-LeIwHZ9mKg7DlKMpITRCrToxqqlKxi46iu+rrkavFmnuVqHnMtqifa9TOIw1DeN4+zMGQjCoLsFVNL6FxNKc7CNd46wMOwzCdPwbTqV8mnxr+iZ6SmoHQcZAC6fA2GQrTwOCSBoJguCQRicLYgwLBsJwvAIdRmGKJWzl0g5WEYWyLZcu27i4l4viEoE-bikOkqjrKE5TkqcVzixC7asueproam4ZfxWVCUeeViUsKxrBsWw7PsECHMcpznJc1y3PcjwvG+IAfn1cY-n+AHDcBqZrcZmbZqtWLeJ4xWuFwjO0G59nIY5h3Vsd7Ona5-5efh7adkRPYkQ9oUURF1HvfRM7xfO9JJf9IQq50nFpcDJp8buFrZcJJ7ifUtC7F29BMCo3hNIw9xkN4KjnFwZAqK4Hq0GQtC0Os2NRu+Mb9UTQ3JmTo0UxmK2GXTRUXEzXAs7tsr7RW1Jc2d9YeedeGXR2hHdr2pGPWFL1UW9tEfQxKrfWJmp-bqKshGrqVAzxWuZbr4O5SJUNGyb-Jm9blvW7stv2-yTsux27ue2wam+xphPaSTQcGWNYemVBa2RwzMdx3Ze1uU5Kd8xSDZlrh3kEV2xEheRz2UZFqSl7LX3MVXlRK7Xqvq03W7awJ+7WhDTuBVjam3NgPG2dsHZj1dpPL2M88Z+3noNHSgERqGUpuHaCFlvBWW8DZVme8UKc3QkfXmp8BaXV8v5HwQU47ixvuFV6UUZaxQri-RKNcUqA24j-VugkAEdwNksKOpVyqVWqrVeqrhGoQGak0VqdAOCdW6rjfGX4BrE10kvcmWIJqWEgACAAgkIQYQgchLTwGvGmNANqsA4NwAhCd97EJcidUQJ8cIULbG4Dwt0-DXyeow4uzDH6sKYglX67EuFcXSi3UGbcBHHnyqeGG6xNjbD2AcLwKMzgXCuDcO4Dx4FqP9gvLR+kdHgSpmZaCbAhSBncL4RxUVE4HxIW49yqcz6C2zpfUWATC532lqEz6bCImK04fUOuDduGxO3DrfhOUkld2YKsm4NVgzUFkVwM4bovSMF2O6XYTQOrUGYPQdYxTEFaWQYvCpIddGr2poZOp3gGn+kJLvJxRDk7tJ5u49O-MLreOFrnMWZFAlF3vuOEZ5dwkK2rlEqZn9G48JBgs-+SzIYFVWec1wGz6BbPYDspoezmAHKOSc1g5zLk416uogOKDSbL1DiZZ5tSmBvLeR85pHS2muP+Z0vm3Ss6gqvvnCWt8pYlxiqM+FP0JlIumV-NFcSMV60AUI+ouL1nME2ds3ZKh9mHONlSs5FzqBXLnjczRqDg7oKeTUta2DcH4Pji05xvyBV1mPoCkVPk-LeACrQgZksmEP1lXC+WCrEXJQBjEzW8y-4asEckw2IiyqoAqlVGqZA6pkAak1FqbUlFdR6rPAmNrA73IdUiSaIBwQ2GMaY8x2BLHsrWooza9idpfI9T8tC3rE4eLrP6lw11PA+H8RKhhULhmRrlpXDhSKVVzN-mDRJ2KUlVVhukhGWSjgnFyejApWMrWVo0dWtBK82VOqxM4ZwzAGDeHOdQagvLBX8u5j6shnjgUXxFnnehkKhkyromE6Nr82JxuVaitdfDMX6zTUsHkxLvSNWoLsHB5xVnXAFJZdgtxyUHJfeehlZS7Ussebe9e97H3Ptfe+91fKXHfuHX6rxAGwWhqleGmFC7n7jNjcrFFszE3roSVioBp5UM7C4BhrDtAcPku4AFWghGs09iw51OlFbyO3PKde1l1TaMuHo-6RjH6f0HS9WxtyI7PL-qFjncVwHBnSpCQJsZCK36TNg2J5uSaN1Sa1bJ9D5xFPKbw2pjTxHtNkdKQZyjlSjKOtM1gF1bg8G2SMGzazSdB12bTl0zjWAqFBpocFGdIGPMRvA3KyDy642rvEwhlNyyCoZrETmyRBbpFFvkSWjqZbVHXMvUy7RDzwL1vQDEJoKgoAUHQH8HQux8BvCwKAWb83FvoCWgQcS8AyA6BUBAYwg46zUggB8SgyAfx1lQJIMgNgIAABUHCCG0m57AQ8oDoClAtpbZYO1Yj-NCusUGQAohAI9mAz23sfaQkx2b8hsCgD7Sx2zqdfUlac3+b7WBfv-YCHe7S4OhNkmhxQQQkILGgBKT8Mg-AnaEDbH+DHn7WPY9-aO0r+OIWDiJ1KEHZPCGQ5MgzpnLPJzaQ5-lr93OAW48zmznjQuSfpbB2Ljyda+C7CEM9uAcw6cgEGE0fAUBWc5G0kIZQFuOgnYgNb5BtuzAADdhAOGd3+VAgQVAaEt+Eb3ARcqoODyAAEtu2jwDAOHuXrSuekKV8KvnauyB-eF6T5B5OfMyBMmb+3k5w+2-QPbj4p3i8QmQB7xw4ffeqAD5aJ3aAvuh+GuHyPHwbAx7j7lwhHMsdJ6FeQvHaeM8a+sdn7XGF8-IHN5bovLeXd28t+X5vg4-yu+r57uvfvG9B6X-jtvyYO-RC7z3w-VmE+D46Q5jO59kEE-V1YwyWvvni8zAXhfXvL8gBL2Xx3Svd3HfX-evf3fgQPdfVvIgMPX-TvaPWPX-ePT1QrRXYfP9FXL7AXH7dPYnF-aCN-ftD-UAL-K3X-f-VfQA8gqvGvH-DfPgMA-fKAx-Y-SEU-KPbvRA+g5jTnG-QVO-IFTAx-bAwnXAzPTXPjCHHXetQHPbQxefVnbAHQGIMEPgOAcECAeQwvNsZQ1Q03bfI3eALQ7-JQlQqAKaKPMgEYUwsEaHf7YaCIAANXTziH2z-xXwd1OxoB7D4C31oO8J9z3wgKbwCJDxgOGmwECj4HgM4JcD-FIJl3bEYDsOgGTAiBSAAA87syhjAs9dCoAkQgA';

// Run the test with the manually provided hash
testWithManualHash(manuallyProvidedHash);